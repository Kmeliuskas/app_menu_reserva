// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//Responsável por armazenar informações dos usuários que vão poder conectar no dashboard do caixa
model Usuario {
  id             Int      @id @default(autoincrement())
  nome_completo  String
  nome_usuario   String   @unique
  email          String   @unique
  senha          String
  dt_nascimento  DateTime
  end_atual      String
  end_permanente String
  cidade         String
  cep            String
  pais           String
}

//responsável por armazenar informações dos clientes que irão fazer uma reserva de mesas ONLINE
//Campos com ? significa que não são obrigatórios informar
model Espera_Digital {
  id             Int     @id @default(autoincrement())
  nome_completo  String
  email          String  @unique
  dia_da_reserva String
  horario        String
  local          String
  qtd_pessoas    String
  telefone       String?
  observacoes    String?
}

// model Categoria_Produto {
//   id             Int       @id @default(autoincrement())
//   nome_categoria String
//   produtos       Produto[] //Vai ser uma lista de Produto
// }

// model Produto {
//   id           Int               @id @default(autoincrement())
//   nome_produto String
//   descricao    String?
//   preco        Decimal
//   disponivel   Boolean           @default(true)
//   imagem       String?
//   categoriaId  Int

//   categoria    Categoria_Produto @relation(fields: [categoriaId], references: [id])
// }

// model Mesa {
//   id         Int    @id @default(autoincrement())
//   numero     Int
//   status     String @default("livre")
//   qtdLugares Int

//   pedidos Pedido[]
// }

// model Pedido {
//   id         Int      @id @default(autoincrement())
//   tipo       String
//   status     String   @default("pendente")
//   mesaId     Int?
//   mesa       Mesa?    @relation(fields: [mesaId], references: [id])
//   dataPedido DateTime @default(now())

//   itens ItemPedido[]
// }

// model ItemPedido {
//   id         Int     @id @default(autoincrement())
//   pedidoId   Int
//   produtoId  Int
//   quantidade Int     
//   preco      Decimal 
//   obs        String? 

//   pedido  Pedido  @relation(fields: [pedidoId], references: [id])

//   produto Produto @relation(fields: [produtoId], references: [id])

  
// }
